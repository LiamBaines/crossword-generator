{"version":3,"sources":["library/defaults.js","classes/Square.js","classes/methods/GridNode/backtrack.js","classes/methods/GridNode/coordsAt.js","classes/methods/GridNode/generate.js","library/isAlpha.js","library/shuffleArray.js","classes/methods/GridNode/getSuccessors.js","classes/methods/GridNode/insert.js","classes/methods/GridNode/wordAt.js","classes/GridNode.js","components/Buttons.js","components/Clue.js","components/GridSquareBlack.js","components/GridSquareWhite.js","components/GridRow.js","components/Grid.js","components/Wrap.js","components/methods/App/AdjustDirection.js","components/methods/App/Check.js","components/methods/App/Delete.js","components/methods/App/Generate.js","components/methods/App/HandleKeyPress.js","components/methods/App/InputCharacter.js","components/methods/App/MoveActive.js","components/methods/App/Reveal.js","components/methods/App/ResetAnimation.js","components/methods/App/Select.js","components/methods/App/Success.js","components/methods/App/ValidNeighbour.js","App.js","index.js"],"names":["acrossArray","answersArray","downArray","numbersArray","fillOrder","Square","answer","across","down","this","backtrack","str","coords","lastAdded","pop","arr","concat","values","coordsAt","num","dir","i","j","push","length","undefined","a","n","getSuccessors","successors","successor","insert","generate","val","isAlpha","charCodeAt","shuffleArray","array","Math","floor","random","param","wordAt","url","promise","$","get","then","wordsArray","formattedWords","filter","obj","defs","word","score","defHeadword","map","toUpperCase","split","def","substr","indexOf","String","fromCharCode","some","char","console","log","join","added","definitions","GridNode","bind","row","Buttons","props","className","onClick","check","reveal","Clue","clue","loading","locked","active","grid","GridSquareBlack","style","backgroundColor","GridSquareWhite","color","square","guess","rowNum","colNum","subClass","col","corrected","success","delay","toString","duration","count","cursor","animationName","animation","animationDuration","animationDelay","animationIterationCount","select","GridRow","Grid","table","Wrap","id","AdjustDirection","oldRow","oldCol","state","ResetAnimation","setState","currentState","incorrect","height","width","setTimeout","Check","Delete","Generate","e","keyCode","MoveActive","key","InputCharacter","HandleKeyPress","ValidNeighbour","guesses","colours","toLowerCase","slice","newRow","newCol","Select","Reveal","every","Success","newState","old","position","App","document","addEventListener","React","Component","ReactDOM","render","getElementById"],"mappings":"2QAAMA,EAAc,CAClB,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjD,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAAI,GAAI,GAAI,GAAI,IACjD,CAAC,EAAI,EAAI,EAAI,EAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAAI,EAAI,GACjD,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAAI,GAAI,GAAI,GAAI,IACjD,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAG7CC,EAAe,CACnzDC,EAAY,CAChB,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,GAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAAI,EAAI,GACjD,CAAC,GAAI,EAAI,EAAI,EAAI,GAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAAI,EAAI,IACjD,CAAC,GAAI,EAAI,EAAI,EAAI,GAAI,EAAI,EAAI,EAAI,GAAI,EAAI,GAAI,EAAI,IACjD,CAAC,GAAI,EAAI,GAAI,EAAI,GAAI,EAAI,EAAI,EAAI,GAAI,EAAI,GAAI,EAAI,IACjD,CAAC,GAAI,EAAI,GAAI,EAAI,GAAI,EAAI,EAAI,EAAI,GAAI,EAAI,GAAI,EAAI,IACjD,CAAC,GAAI,EAAI,GAAI,EAAI,GAAI,EAAI,EAAI,EAAI,GAAI,EAAI,GAAI,EAAI,IACjD,CAAC,GAAI,EAAI,GAAI,EAAI,GAAI,EAAI,EAAI,EAAI,GAAI,EAAI,GAAI,EAAI,KAG7CC,EAAe,CACnB,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,GAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAAI,EAAI,GAAI,EAAI,GACjD,CAAC,EAAI,EAAI,EAAI,EAAI,GAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GACjD,CA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","file":"static/js/main.d0a9783c.chunk.js","sourcesContent":["const acrossArray = [\r\n  [1,  1,  1,  1,  1,  1,  0,  4,  4,  4,  4,  4,  4],\r\n  [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\r\n  [9,  9,  9,  9,  9,  9,  9,  0,  0,  0,  0,  0,  0],\r\n  [0,  0,  0,  0,  0,  0,  10, 10, 10, 10, 10, 10, 10],\r\n  [11, 11, 11, 11, 11, 0,  0,  0,  0,  0,  0,  0,  0],\r\n  [0,  0,  0,  0,  0,  0,  0,  0,  12, 12, 12, 12, 12],\r\n  [0,  0,  0,  0,  14, 14, 14, 14, 14, 0,  0,  0,  0],\r\n  [15, 15, 15, 15, 15, 0,  0,  0,  0,  0,  0,  0,  0],\r\n  [0,  0,  0,  0,  0,  0,  0,  0,  17, 17, 17, 17, 17],\r\n  [18, 18, 18, 18, 18, 18, 18, 0,  0,  0,  0,  0,  0],\r\n  [0,  0,  0,  0,  0,  0,  20, 20, 20, 20, 20, 20, 20],\r\n  [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\r\n  [21, 21, 21, 21 ,21, 21, 0,  22, 22, 22, 22, 22, 22]\r\n];\r\n\r\nconst answersArray = [\r\n  ['?', '?', '?', '?', '?', '?', 'x', '?', '?', '?', '?', '?', '?'],\r\n  ['?', 'x', '?', 'x', '?', 'x', '?', 'x', '?', 'x', '?', 'x', '?'],\r\n  ['?', '?', '?', '?', '?', '?', '?', 'x', '?', 'x', '?', 'x', '?'],\r\n  ['?', 'x', '?', 'x', '?', 'x', '?', '?', '?', '?', '?', '?', '?'],\r\n  ['?', '?', '?', '?', '?', 'x', '?', 'x', '?', 'x', 'x', 'x', '?'],\r\n  ['?', 'x', '?', 'x', 'x', 'x', '?', 'x', '?', '?', '?', '?', '?'],\r\n  ['x', 'x', '?', 'x', '?', '?', '?', '?', '?', 'x', '?', 'x', 'x'],\r\n  ['?', '?', '?', '?', '?', 'x', '?', 'x', 'x', 'x', '?', 'x', '?'],\r\n  ['?', 'x', 'x', 'x', '?', 'x', '?', 'x', '?', '?', '?', '?', '?'],\r\n  ['?', '?', '?', '?', '?', '?', '?', 'x', '?', 'x', '?', 'x', '?'],\r\n  ['?', 'x', '?', 'x', '?', 'x', '?', '?', '?', '?', '?', '?', '?'],\r\n  ['?', 'x', '?', 'x', '?', 'x', '?', 'x', '?', 'x', '?', 'x', '?'],\r\n  ['?', '?', '?', '?', '?', '?', 'x', '?', '?', '?', '?', '?', '?'],\r\n];\r\n\r\nconst downArray = [\r\n  [1,  0,  2,  0,  3,  0,  0,  0,  5,  0,  6,  0,  7],\r\n  [1,  0,  2,  0,  3,  0,  8,  0,  5,  0,  6,  0,  7],\r\n  [1,  0,  2,  0,  3,  0,  8,  0,  5,  0,  6,  0,  7],\r\n  [1,  0,  2,  0,  3,  0,  8,  0,  5,  0,  6,  0,  7],\r\n  [1,  0,  2,  0,  3,  0,  8,  0,  5,  0,  0,  0,  7],\r\n  [1,  0,  2,  0,  0,  0,  8,  0,  5,  0,  13, 0,  7],\r\n  [0,  0,  2,  0,  14, 0,  8,  0,  5,  0,  13, 0,  0],\r\n  [15, 0,  2,  0,  14, 0,  8,  0,  0,  0,  13, 0,  16],\r\n  [15, 0,  0,  0,  14, 0,  8,  0,  17, 0,  13, 0,  16],\r\n  [15, 0,  19, 0,  14, 0,  8,  0,  17, 0,  13, 0,  16],\r\n  [15, 0,  19, 0,  14, 0,  8,  0,  17, 0,  13, 0,  16],\r\n  [15, 0,  19, 0,  14, 0,  8,  0,  17, 0,  13, 0,  16],\r\n  [15, 0,  19, 0,  14, 0,  0,  0,  17, 0,  13, 0,  16],\r\n];\r\n\r\nconst numbersArray = [\r\n  [1,  0,  2,  0,  3,  0,  0,  4,  5,  0,  6,  0,  7],\r\n  [0,  0,  0,  0,  0,  0,  8,  0,  0,  0,  0,  0,  0],\r\n  [9,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\r\n  [0,  0,  0,  0,  0,  0,  10, 0,  0,  0,  0,  0,  0],\r\n  [11, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\r\n  [0,  0,  0,  0,  0,  0,  0,  0,  12, 0,  13, 0,  0],\r\n  [0,  0,  0,  0,  14, 0,  0,  0,  0,  0,  0,  0,  0],\r\n  [15, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  16],\r\n  [0,  0,  0,  0,  0,  0,  0,  0,  17, 0,  0,  0,  0],\r\n  [18, 0,  19, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\r\n  [0,  0,  0,  0,  0,  0,  20, 0,  0,  0,  0,  0,  0],\r\n  [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],\r\n  [21, 0,  0,  0,  0,  0,  0, 22,  0,  0,  0,  0,  0]\r\n];\r\n\r\nconst fillOrder = [\r\n  [8, 'down'],\r\n  [9, 'across'],\r\n  [3, 'down'],\r\n  [1, 'down'],\r\n  [1, 'across'],\r\n  [11, 'across'],\r\n  [2, 'down'],\r\n  [15, 'down'],\r\n  [15, 'across'],\r\n  [18, 'across'],\r\n  [19, 'down'],\r\n  [21, 'across'],\r\n  [14, 'down'],\r\n  [14, 'across'],\r\n  [5, 'down'],\r\n  [4, 'across'],\r\n  [6, 'down'],\r\n  [10, 'across'],\r\n  [7, 'down'],\r\n  [12, 'across'],\r\n  [13, 'down'],\r\n  [17, 'across'],\r\n  [22, 'across'],\r\n  [16, 'down'],\r\n  [20, 'across'],\r\n  [17, 'down']\r\n]\r\n\r\nexport { acrossArray, answersArray, downArray, numbersArray, fillOrder };","class Square {\r\n  constructor(answer, across, down) {\r\n    this.answer = answer;\r\n    this.across = across;\r\n    this.down = down;\r\n  }\r\n}\r\n\r\nexport default Square;","function backtrack() {\r\n  let str = ''\r\n  let coords = this.lastAdded.pop();\r\n  for (let arr of coords) {\r\n    str = str.concat(this.values[arr[0]][arr[1]].answer)\r\n    this.values[arr[0]][arr[1]].answer = '?'\r\n  }\r\n}\r\n\r\nexport default backtrack;","function coordsAt(num, dir) {\r\n  let coords = [];\r\n  for (let i = 0; i < 13; i++) {\r\n    for (let j = 0; j < 13; j++) {\r\n      if (this.values[i][j][dir] == num) coords.push([i, j])\r\n    }\r\n  }\r\n  return (coords.length > 0) ? coords : undefined;\r\n}\r\n\r\nexport default coordsAt;","async function generate(n = 0) {\r\n  if (n == 26) {\r\n    return this;\r\n  }\r\n  else {\r\n    let [num, dir] = this.fillOrder[n];\r\n    let successors = await this.getSuccessors(num, dir);\r\n    for (let successor of successors) {\r\n      this.insert(num, dir, successor)\r\n      let val = await this.generate(n + 1)\r\n      if (val !== false) {\r\n        return val;\r\n      } else {\r\n        this.backtrack();\r\n      }\r\n    }\r\n    return false;\r\n  } \r\n}\r\n\r\nexport default generate;","function isAlpha(str) {\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (str[i].charCodeAt() < 97 || str.charCodeAt() > 122) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default isAlpha;","function shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n\r\nexport default shuffleArray;","import $ from 'jquery';\r\nimport isAlpha from '../../../library/isAlpha.js'\r\nimport shuffleArray from '../../../library/shuffleArray.js'\r\n\r\nasync function getSuccessors(num, dir) {\r\n  let param = this.wordAt(num, dir)\r\n  let url = `https://api.datamuse.com/words?sp=${param}&md=d&max=500`;\r\n  const promise = $.get(url)\r\n    .then((wordsArray) => {\r\n      // discard obscure words\r\n      let validWords = wordsArray.filter((obj) => (obj.defs && isAlpha(obj.word) == true && obj.score > 400 && obj.defHeadword == undefined));  \r\n      // format word definitions\r\n      let formattedWords = validWords.map(obj => {\r\n        let word = obj.word.toUpperCase().split('')\r\n        let def = obj.defs[0];\r\n        def = def.substr(def.indexOf(String.fromCharCode(9)) + 1);\r\n        def = def.substr(0, 1).toUpperCase().concat(def.substr(1)).concat(` (${obj.word.length})`)\r\n        if (def.substr(0,1) == '(') def = '('.concat(def.substr(1,1).toUpperCase()).concat(def.substr(2))\r\n        return {word: word, def: def}\r\n      });  \r\n      shuffleArray(formattedWords);\r\n      if (!param.split('').some(char => char == '?')) console.log(`(${num} ${dir}) parameter ${param} returned ${formattedWords.map(obj => obj.word.join(''))}`)\r\n      return formattedWords;\r\n    })\r\n  return await promise;\r\n}  \r\n\r\nexport default getSuccessors;","function insert(num, dir, obj) {\r\n  let coords = this.coordsAt(num, dir)\r\n  let added = []\r\n  for (let i = 0; i < obj.word.length; i++) {\r\n    let arr = coords[i]\r\n    if (this.values[arr[0]][arr[1]].answer == '?') added.push(arr)\r\n    this.values[arr[0]][arr[1]].answer = obj.word[i];\r\n  }\r\n  this.lastAdded.push(added)\r\n  this.definitions[dir][num] = obj.def\r\n}\r\n\r\nexport default insert;","function wordAt(num, dir) {\r\n  let coords = this.coordsAt(num, dir)\r\n  let str = '';\r\n  for (let arr of coords) {\r\n    str = str.concat(this.values[arr[0]][arr[1]].answer)\r\n  }\r\n  return str;\r\n}\r\n\r\nexport default wordAt;","import { acrossArray, answersArray, downArray, numbersArray, fillOrder } from '../library/defaults.js'\r\nimport Square from './Square.js'\r\n\r\nimport backtrack from './methods/GridNode/backtrack.js'\r\nimport coordsAt from './methods/GridNode/coordsAt.js'\r\nimport generate from './methods/GridNode/generate.js'\r\nimport getSuccessors from './methods/GridNode/getSuccessors.js'\r\nimport insert from './methods/GridNode/insert.js'\r\nimport wordAt from './methods/GridNode/wordAt.js'\r\n\r\nclass GridNode {\r\n  constructor() {\r\n    this.backtrack = backtrack.bind(this);\r\n    this.coordsAt = coordsAt.bind(this);\r\n    this.generate = generate.bind(this);\r\n    this.getSuccessors = getSuccessors.bind(this);\r\n    this.insert = insert.bind(this);\r\n    this.wordAt = wordAt.bind(this);\r\n    this.lastAdded = [];\r\n    this.fillOrder = fillOrder;\r\n    this.definitions = {\r\n      across: {},\r\n      down: {}\r\n    }\r\n    this.values = [];\r\n    for (let i = 0; i < 13; i++) {\r\n      let row = [];\r\n      for (let j = 0; j < 13; j++) {\r\n        let answer = answersArray[i][j];\r\n        let across = acrossArray[i][j];\r\n        let down = downArray[i][j];\r\n        row.push(new Square(answer, across, down))\r\n      }\r\n      this.values.push(row);\r\n    }\r\n  }  \r\n}\r\n\r\nexport default GridNode;","import React from 'react';\r\n\r\nfunction Buttons(props) {\r\n  return (\r\n    <div className=\"nav\">\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <button onClick={props.generate}>New crossword</button>\r\n              <button onClick={props.check}>Check</button>\r\n              <button onClick={props.reveal}>I give up!</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n }\r\n\r\nexport default Buttons;","import React from 'react';\r\n\r\nfunction Clue(props) {\r\n  let clue;\r\n  if (props.loading == true) clue = 'Loading...';\r\n  else if (props.locked == true) clue = `Score: ${props.score}`\r\n  else clue = `${props.active.num}. ${props.grid.definitions[props.active.dir][props.active.num]}`\r\n  return (\r\n    <div className = \"clue\">\r\n      <p>{clue}</p>\r\n    </div>\r\n  )\r\n }\r\n\r\nexport default Clue;","import React from 'react';\r\n\r\nfunction GridSquareBlack(props) {\r\n  return (\r\n    <td style={{backgroundColor: 'black'}}></td>\r\n  )\r\n}\r\n\r\nexport default GridSquareBlack;","import React from 'react';\r\nimport { numbersArray } from '../library/defaults'\r\n\r\nfunction GridSquareWhite(props) {\r\n\r\n  let char = (props.square.guess !== 'x') ? props.square.guess : '';\r\n  let num = (numbersArray[props.rowNum][props.colNum] === 0) ? '' : numbersArray[props.rowNum][props.colNum];\r\n  \r\n  let subClass = 'whitesquare'\r\n  let color;\r\n  if (props.locked == false) {\r\n    if (props.square[props.active.dir] == props.active.num) subClass = 'lightbluesquare'\r\n    if (props.active.row == props.rowNum && props.active.col == props.colNum) subClass = 'bluesquare'  \r\n  }\r\n  if (props.locked == true) {\r\n    if (props.square.corrected == true) color = 'red';\r\n    if (props.success == true) color = '#08c90f';\r\n  }\r\n  let delay = (props.loading == true) ? (0.05 * props.rowNum).toString().concat('s') : '0s';\r\n  let duration = (props.loading == true) ? '2s' : '1s';\r\n  let count = (props.loading == true) ? 'infinite' : '';\r\n  let style = {\r\n    color: color,\r\n    cursor: 'pointer',\r\n    animationName: props.square.animation,\r\n    animationDuration: duration,\r\n    animationDelay: delay,\r\n    animationIterationCount: count,\r\n  }\r\n  if (props.loading == true) style.animationName = 'loading';\r\n  return (\r\n    <td className={subClass} style={style} onClick={() => props.select(props.rowNum, props.colNum)}>\r\n      <span className=\"number\">{num}</span>\r\n      <div className=\"letter\">{char}</div>\r\n    </td>\r\n  )\r\n}\r\n\r\nexport default GridSquareWhite;","import React from 'react';\r\nimport GridSquareBlack from './GridSquareBlack';\r\nimport GridSquareWhite from './GridSquareWhite'\r\n\r\nfunction GridRow(props) {\r\n  let row = [];\r\n  for (let i = 0; i < props.row.length; i++) {\r\n    if (props.row[i].answer === 'x') {\r\n      row.push(GridSquareBlack())\r\n    } else {\r\n      row.push(\r\n        GridSquareWhite({\r\n          active: props.active,\r\n          square: props.row[i],\r\n          loading: props.loading,\r\n          locked: props.locked,\r\n          rowNum: props.rowNum,\r\n          colNum: i,\r\n          select: props.select,\r\n          success: props.success\r\n        })\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <tr>\r\n      {row}\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default GridRow;","import React from 'react';\r\nimport GridRow from './GridRow.js'\r\n\r\nfunction Grid(props) {\r\n  let table = [];\r\n  for (let i = 0; i < props.grid.values.length; i++) {\r\n    table.push(GridRow({\r\n      active: props.active,\r\n      animation:props.animation,\r\n      row: props.grid.values[i],\r\n      loading: props.loading,\r\n      locked: props.locked,\r\n      rowNum: i,\r\n      select: props.select,\r\n      success: props.success\r\n      })\r\n    );\r\n  }\r\n  return (\r\n    <table className=\"grid\">\r\n      {table}\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\n\r\nimport Buttons from './Buttons.js'\r\nimport Clue from './Clue.js'\r\nimport Grid from './Grid.js'\r\n\r\nfunction Wrap(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        {Buttons(props)}\r\n      </header>\r\n      <header className=\"App-header\">\r\n        <div id=\"wrap\">\r\n          {Grid(props)}\r\n          {Clue(props)}\r\n        </div>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wrap;","function AdjustDirection(dir, row, col, oldRow, oldCol) {\r\n  let square = this.state.grid.values[row][col]\r\n  if (square.across !== 0 && square.down !== 0 && row == oldRow & col == oldCol) return (dir == 'across') ? 'down' : 'across';\r\n  if (dir == 'across' && square.across == 0) return 'down';\r\n  else if (dir == 'down' && square.down == 0) return 'across';\r\n  return dir;\r\n} \r\n\r\nexport default AdjustDirection;","async function Check() {\r\n  if (this.state.loading == false && this.state.locked == false) {\r\n    await this.ResetAnimation();\r\n    await this.setState(currentState => {\r\n      let incorrect = 0;\r\n      for (let i = 0; i < currentState.height; i++) {\r\n        for (let j = 0; j < currentState.width; j++) {\r\n          let square = currentState.grid.values[i][j];\r\n          if (square.answer != 'x') {\r\n            if (square.guess != square.answer) {\r\n              if (square.guess) {\r\n                square.animation = 'incorrect';\r\n              }\r\n              incorrect++;\r\n              square.guess = undefined;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (incorrect == 0) {\r\n        let score = 0;\r\n        for (let i = 0; i < currentState.height; i++) {\r\n          for (let j = 0; j < currentState.height; j++) {\r\n            let square = currentState.grid.values[i][j]\r\n            if (square.answer == square.guess) {\r\n              square.animation = 'correct';\r\n              score++\r\n            }\r\n          }\r\n        }\r\n        return {\r\n          grid: currentState.grid,\r\n          score: score,\r\n          locked: true,\r\n          success: true\r\n        }\r\n      }\r\n      else return {\r\n        grid: currentState.grid,\r\n      }\r\n    })\r\n    setTimeout(this.ResetAnimation, 1000)\r\n  }\r\n}\r\n\r\nexport default Check;","function Delete() {\r\n  this.setState(currentState => {\r\n    currentState.grid.values[currentState.active.row][currentState.active.col].guess = 'x'\r\n    return {\r\n      grid: currentState.grid\r\n    }\r\n  })\r\n}\r\n\r\nexport default Delete;","import GridNode from '../../../classes/GridNode.js'\r\n\r\nasync function Generate() {\r\n  await this.setState(() => {\r\n    return {\r\n      active: {row: 0, col: 0, num: 1, dir: 'across'},\r\n      grid: new GridNode(),\r\n      loading: true,\r\n      score: 0\r\n    }\r\n  })\r\n  let grid = await this.state.grid.generate();\r\n  this.setState(() => {\r\n    return {\r\n      grid: grid,\r\n      width: grid.values[0].length,\r\n      height: grid.values.length,\r\n      locked: false,\r\n      loading: false,\r\n      success: false\r\n    }\r\n  })\r\n}\r\n\r\nexport default Generate;","// import Delete from './Delete.js'\r\n// import InputCharacter from './InputCharacter.js'\r\n// import MoveActive from './MoveActive.js'\r\n\r\nasync function HandleKeyPress(e) {\r\n  console.log(this.state.grid.values[0][0].animation)\r\n  //move\r\n  if (e.keyCode > 36 && e.keyCode < 41) this.MoveActive(e.key);\r\n  if (this.state.locked == false && this.state.loading == false) {\r\n    //input character\r\n    if (e.keyCode > 64 && e.keyCode < 123) this.InputCharacter(e.key);\r\n    //backspace/delete\r\n    if (e.keyCode == 8 || e.keyCode == 46) {\r\n      //if cell is filled, delete contents\r\n      if (this.state.grid.values[this.state.active.row][this.state.active.col].guess != 'x') {\r\n        this.Delete()\r\n      }\r\n      //else, move back one and delete that\r\n      else {\r\n        let key = (this.state.active.dir == 'across') ? 'ArrowLeft' : 'ArrowUp';\r\n        this.MoveActive(key)\r\n        .then(this.Delete())\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default HandleKeyPress;","function InputCharacter(key) {\r\n  this.setState(currentState => {\r\n    let row = this.state.active.row;\r\n    let col = this.state.active.col;\r\n    currentState.grid.values[row][col].guess = key.toUpperCase();\r\n    currentState.grid.values[row][col].animation = 'none';\r\n    if (currentState.active.dir == 'across') {\r\n      if (this.ValidNeighbour(row, col, 'right')) {\r\n        currentState.active.col++\r\n      }\r\n    }\r\n    if (currentState.active.dir == 'down') {\r\n      if (this.ValidNeighbour(row, col, 'down')) {\r\n        currentState.active.row++\r\n      } \r\n    }\r\n    return {\r\n      grid: currentState.grid,\r\n      guesses: currentState.guesses,\r\n      colours: currentState.colours,\r\n      active: currentState.active,\r\n      animation: ''\r\n    }\r\n  })\r\n}\r\n\r\nexport default InputCharacter;","async function MoveActive(key) {\r\n  let dir = key[5].toLowerCase().concat(key.slice(6));\r\n  let row = this.state.active.row;\r\n  let col = this.state.active.col;\r\n  if (!this.ValidNeighbour(row, col, dir)) return;\r\n  let newRow;\r\n  let newCol;\r\n  if (dir == 'up') [newRow, newCol] = [row - 1, col];\r\n  if (dir == 'down') [newRow, newCol] = [row + 1, col];\r\n  if (dir == 'left') [newRow, newCol] = [row, col - 1];\r\n  if (dir == 'right') [newRow, newCol] = [row, col + 1];\r\n  this.Select(newRow, newCol)\r\n}\r\n\r\nexport default MoveActive;","function Reveal() {\r\n  console.log('Revealing')\r\n  if (this.state.locked == false && this.state.loading == false) {\r\n    if (this.state.grid.values.every(row => row.every(square => square.answer == 'x' || square.answer == square.guess))) {\r\n      this.Success();\r\n    }\r\n    this.setState(currentState => {\r\n      let score = 0;\r\n      for (let i = 0; i < currentState.height; i++) {\r\n        for (let j = 0; j < currentState.width; j++) {\r\n          let square = currentState.grid.values[i][j];\r\n          if (square.guess == square.answer) {\r\n            square.animation = 'correct';\r\n            score++\r\n          }\r\n          else {\r\n            square.guess = square.answer\r\n            square.animation = 'incorrect';\r\n            square.corrected = true;\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        grid: currentState.grid,\r\n        score: score,\r\n        locked: true\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default Reveal;","async function ResetAnimation() {\r\n  this.setState(currentState => {\r\n    for (let i = 0; i < currentState.height; i++) {\r\n      for (let j = 0; j < currentState.width; j++) {\r\n        currentState.grid.values[i][j].animation = 'none';\r\n      }\r\n    }\r\n    return {\r\n      grid: currentState.grid\r\n    }\r\n  })  \r\n}\r\n\r\nexport default ResetAnimation;","function Select(row, col) {\r\n  let newState = {};\r\n  newState.active = {row: row, col: col, dir: this.state.active.dir, num: this.state.active.num};\r\n  let old = {row: this.state.active.row, col: this.state.active.col};\r\n  // change active direction if necessary\r\n  newState.active.dir = this.AdjustDirection(newState.active.dir, row, col, old.row, old.col)\r\n  newState.active.num = this.state.grid.values[row][col][newState.active.dir]\r\n  this.setState(() => {\r\n    return {\r\n      active: newState.active,\r\n      colours: newState.colours\r\n    }\r\n  })\r\n}\r\n\r\nexport default Select;","function Success() {\r\n  this.setState(currentState => {\r\n    let score = 0;\r\n    for (let i = 0; i < currentState.height; i++) {\r\n      for (let j = 0; j < currentState.width; j++) {\r\n        let square = currentState.grid.values[i][j];\r\n        square.animation = 'correct';\r\n        score++\r\n      }\r\n    }\r\n    return {\r\n      grid: currentState.grid,\r\n      score: score,\r\n      locked: true,\r\n      success: true\r\n    }\r\n  })\r\n}\r\n\r\nexport default Success;","function ValidNeighbour(row, col, position) {\r\n  if (position == 'up') {\r\n    if (row == 0) return false;\r\n    else if (this.state.grid.values[row - 1][col].answer == 'x') return false;\r\n  }\r\n  if (position == 'down') {\r\n    if (row == this.state.height - 1) return false;\r\n    else if (this.state.grid.values[row + 1][col].answer == 'x') return false;\r\n  }\r\n  if (position == 'left') {\r\n    if (col == 0) return false;\r\n    else if (this.state.grid.values[row][col - 1].answer == 'x') return false;\r\n  }\r\n  if (position == 'right') {\r\n    if (col == this.state.width - 1) return false;\r\n    else if (this.state.grid.values[row][col + 1].answer == 'x') return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default ValidNeighbour;","//classes\r\nimport GridNode from './classes/GridNode.js'\r\n\r\n// components\r\nimport Wrap from './components/Wrap.js'\r\n\r\n// methods\r\nimport AdjustDirection from './components/methods/App/AdjustDirection.js'\r\nimport Check from './components/methods/App/Check.js'\r\nimport Delete from './components/methods/App/Delete.js'\r\nimport Generate from './components/methods/App/Generate.js'\r\nimport HandleKeyPress from './components/methods/App/HandleKeyPress'\r\nimport InputCharacter from './components/methods/App/InputCharacter.js'\r\nimport MoveActive from './components/methods/App/MoveActive.js'\r\nimport Reveal from './components/methods/App/Reveal.js'\r\nimport ResetAnimation from './components/methods/App/ResetAnimation.js'\r\nimport Select from './components/methods/App/Select.js'\r\nimport Success from './components/methods/App/Success.js'\r\nimport ValidNeighbour from './components/methods/App/ValidNeighbour.js'\r\n\r\n// node modules\r\nimport React from 'react';\r\n\r\n// styles\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.AdjustDirection = AdjustDirection.bind(this);\r\n    this.Check = Check.bind(this);\r\n    this.Delete = Delete.bind(this);  \r\n    this.Generate = Generate.bind(this);\r\n    this.HandleKeyPress = HandleKeyPress.bind(this);\r\n    this.InputCharacter = InputCharacter.bind(this);\r\n    this.MoveActive = MoveActive.bind(this);\r\n    this.ResetAnimation = ResetAnimation.bind(this);\r\n    this.Reveal = Reveal.bind(this);\r\n    this.Select = Select.bind(this);\r\n    this.Success = Success.bind(this);\r\n    this.ValidNeighbour = ValidNeighbour.bind(this);\r\n    document.addEventListener('keydown', this.HandleKeyPress);\r\n    this.state = {\r\n      active: {row: 0, col: 0, num: 1, dir: 'across'},\r\n      grid: new GridNode(),\r\n      height: 13,\r\n      loading: true,\r\n      locked: false,\r\n      score: 0,\r\n      success: false,\r\n      width: 13\r\n    };\r\n  } \r\n  render() {\r\n    return (\r\n          <Wrap\r\n            active={this.state.active}\r\n            animation={this.state.animation}\r\n            check={this.Check}\r\n            generate={this.Generate}\r\n            grid={this.state.grid}\r\n            loading={this.state.loading}\r\n            locked={this.state.locked}\r\n            reveal={this.Reveal}\r\n            score={this.state.score}\r\n            select={this.Select}      \r\n            success={this.state.success}   \r\n          />  \r\n    )\r\n  }\r\n  componentDidMount() {\r\n    this.Generate();\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n    <App />,\r\n  //</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}